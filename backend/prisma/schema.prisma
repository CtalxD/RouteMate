datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  DRIVER
}

enum DocumentStatus{
PENDING
APPROVED
REJECTED
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  firstName  String
  lastName   String
  profilePic String?
  password   String
  age        Int
  role       Role      @default(USER)
  document   Document? @relation("UserDocument")
  driverLocation DriverLocation?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Bus {
  busId     String   @id @default(uuid())
  busNumber String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Document {
  id            Int      @id @default(autoincrement())
  licenseNumber Int
  productionYear Int
  status        DocumentStatus  @default(PENDING)
  user          User     @relation("UserDocument", fields: [userId], references: [id])
  userId        Int      @unique
  adminComment  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Ticket {
  id             String   @id @default(uuid())
  busNumberPlate String   
  from           String  
  to             String  
  departureTime  String   
  estimatedTime  String     
  totalPrice     Float 
  passengerNames String[]
  paymentStatus  String   @default("PENDING") // "PENDING" or "PAID"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model DriverLocation {
  id          String   @id @default(uuid())
  driver      User     @relation(fields: [userId], references: [id])
  userId      Int      @unique
  latitude    Float
  longitude   Float
  accuracy    Float?  
  speed       Float?   
  heading     Float?   
  isOnline    Boolean  @default(false)
  lastUpdated DateTime @updatedAt

  @@index([userId])
}

generator client {
  provider = "prisma-client-js"
}
